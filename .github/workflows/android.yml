name: Android CI

on:
  # branch로 push되는 경우
  push:
    branches: [ "develop" ]
  # branch로 향하는 PR이 만들어진 경우
  pull_request:
    branches: [ "develop", "refactor*", "fix*", "feature*", "chore*" ]

jobs:
  build:
    name: MooBeside CI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Cache Gradle Packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/buildSrc/**/*.kt') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Generate local.properties
        run: |
          echo KOBIS_API_KEY=\"$KOBIS_API_KEY\" >> local.properties
          echo TMDB_API_KEY=\"$TMDB_API_KEY\" >> local.properties
          echo YOUTUBE_API_KEY=\"$YOUTUBE_API_KEY\" >> local.properties
        shell: bash
        env:
          KOBIS_API_KEY: ${{ secrets.KOBIS_API_KEY }}
          TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}

#      - name: Set google-services.json
#        run:
#          echo "${{ secrets.GOOGLE_SERVICE_JSON }}" > ./app/google-services.json

      - name: Build with Gradle
        run: ./gradlew assembleDebug
